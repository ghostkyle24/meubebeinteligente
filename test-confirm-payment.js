// Teste para confirmar pagamento no sandbox do Asaas
const ASAAS_API_KEY = '$aact_hmlg_000MzkwODA2MWY2OGM3MWRlMDU2NWM3MzJlNzZmNGZhZGY6OmNmNjUzNjFiLTEyMjUtNGMzMy04ZDhjLWUwMzQ3ZjdjOTYxODo6JGFhY2hfNTI2ZWJjMDAtZTQ3YS00ZWM3LTg1MzktMTg2OGM3YTZlZTZm';
const ASAAS_BASE_URL = 'https://sandbox.asaas.com/api/v3';

async function confirmPayment() {
    console.log('üí∞ Confirmando pagamento no sandbox...');
    
    try {
        // Primeiro, vamos listar as cobran√ßas pendentes
        console.log('üìã Buscando cobran√ßas pendentes...');
        const listResponse = await fetch(`${ASAAS_BASE_URL}/payments?status=PENDING&limit=5`, {
            method: 'GET',
            headers: {
                'access_token': ASAAS_API_KEY,
                'Content-Type': 'application/json',
                'Accept': 'application/json'
            }
        });
        
        if (!listResponse.ok) {
            throw new Error(`Erro ao buscar cobran√ßas: ${listResponse.status}`);
        }
        
        const listResult = await listResponse.json();
        console.log('üìã Cobran√ßas encontradas:', listResult.data.length);
        
        if (listResult.data.length === 0) {
            console.log('‚ùå Nenhuma cobran√ßa pendente encontrada');
            console.log('üí° Crie uma cobran√ßa primeiro usando: node test-asaas-integration.js');
            return;
        }
        
        // Pegar a primeira cobran√ßa pendente
        const payment = listResult.data[0];
        console.log('üéØ Cobran√ßa selecionada:', payment.id);
        console.log('üí∞ Valor:', payment.value);
        console.log('üìÖ Vencimento:', payment.dueDate);
        
        // Simular confirma√ß√£o de pagamento usando o m√©todo correto
        console.log('‚úÖ Simulando confirma√ß√£o de pagamento...');
        const confirmResponse = await fetch(`${ASAAS_BASE_URL}/payments/${payment.id}/receiveInCash`, {
            method: 'POST',
            headers: {
                'access_token': ASAAS_API_KEY,
                'Content-Type': 'application/json',
                'Accept': 'application/json'
            },
            body: JSON.stringify({
                paymentDate: new Date().toISOString().split('T')[0],
                value: payment.value,
                notifyCustomer: false
            })
        });
        
        console.log('üì° Status da confirma√ß√£o:', confirmResponse.status);
        
        if (confirmResponse.ok) {
            const confirmResult = await confirmResponse.json();
            console.log('‚úÖ Pagamento confirmado com sucesso!');
            console.log('üìã Resultado:', JSON.stringify(confirmResult, null, 2));
            console.log('üéâ Webhook deve ser disparado agora!');
        } else {
            const errorResult = await confirmResponse.json();
            console.log('‚ùå Erro ao confirmar pagamento:', errorResult);
        }
        
    } catch (error) {
        console.error('‚ùå Erro no teste:', error);
    }
}

// Executar o teste
confirmPayment();
